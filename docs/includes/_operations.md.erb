# Managing your cluster

## Vault

Vault is one of the most important part of your cluster; It is in charge of
providing your servers and clients with valid TLS certificates and losing
credentials with vault will prevent you from connecting to any of the primary
component unless you SSH on the box (since most of them are configured to allow
non-TLS connections from localhost).

### Credentials

Currently 2 types of credentials are generated during the initial setup phase:

  * __root__: Root credentials are saved into `~/.vault.root.conf` and contains
    the unseal keys and root token for vault, this is a crucial file that you
    will need everytime you restart the servers (to unseal) or if you need to
    do root operation. Make sure to save it somewhere safe!
  * __ansible__: This is an admin AppRole access and is saved into `~/.vault.ansible.conf`,
    it is used when generating certificates during the provisioning process and
    also needs to be shared safely between the administrators so that they can
    operate the cluster. Should they be lost they can easily be regenerated by
    using the root token.

Finally the `<%= build_config['binary']['name'] %>` binary will support a 3rd
way to authenticate and this is the one that developers will probably use to
generate their credentials, when the container starts it will look for a
`~/vault.conf` file that is a JSON file with 2 keys in it:

__key__   | __desc__
----------|----------
`backend` | that should be the name of the auth backend to use
`data`    | that should be the data to be sent during the auth process

This allows administrators to use any of the auth backend they might want to
auth user, such as GitHub auth or LDAP auth, please refer to the vault documentation
for the list of available backend and how to configure/use them.

### Unseal Process

The unseal process is necessary when for example your restart the vault daemon,
it can be done both remotely and localy (on the node itself), make sure that your
`VAULT_ADDR` environment variable is set properly and run `vault unseal`, it will
ask for a key, check your `root` credentials described above and take one of the
keys and input/paste it in the vault prompt, run the command again 2 more times
with different keys to finish the unseal process.

### Backup

Currently vault stores data inside consul and this makes the backup process quite
simple, first connect to any of the control nodes, then just run:

```sh
$ consul kv export vault | xz > my-vault-backup.json.xz
```

You can then export/save this file onto S3 or any other safe storage backend you
want to use.

### Restore

First make sure that vault is stopped, then run:

```sh
$ xzcat my-vault-backup.json.xz | consul kv import -
```

Once import is done, start vault and unseal as normal.

### Rotating certificates

The playbooks support rotating certificates by setting some variables to true:

* __cert&#95;rotate&#95;&lt;service&gt;&#95;server__: Rotate the service's server certificates
* __cert&#95;rotate&#95;&lt;service&gt;&#95;client__: Rotate the service's client certificates
* __cert&#95;rotate&#95;&lt;service&gt;__: Rotate the service's both server and client certificates
* __cert&#95;rotate&#95;all__: Rotate all the certificates for all services

You might need to manually restart some of the daemons and containers that are
using the certificates once the new certificates are generated.
