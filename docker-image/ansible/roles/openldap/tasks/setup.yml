- name: "Check TLS certificates status"
  stat:
    path: "{{ ldap_cert_file }}"
  register: ldap_certs_stat

- name: "Generate server TLS certificates"
  when: >
    ldap_certs_stat.stat.exists|bool == False
    or cert_rotate_ldap_server|default(false)|bool
    or cert_rotate_ldap|default(false)|bool
    or cert_rotate_server|default(false)|bool
    or cert_rotate_all|default(false)|bool
  include_role:
    name: generate-tls
  vars:
    pki:
      # vault backend
      backend: ldap
      role: server
      # targets
      files:
        cert: "{{ ldap_cert_file }}"
        key: "{{ ldap_key_file }}"
        ca: "{{ ldap_ca_file }}"
      # TLS request data
      request_data:
        common_name: "ldap.{{ local_domain_name }}"
        ip_sans: "{{ private_ipv4 }}"
        ttl: "{{ ldap_server_cert_ttl }}"

- name: "Start openldap container"
  docker_container:
    name: openldap
    image: "{{ openldap_image }}:{{ openldap_version }}"
    command: --copy-service
    restart_policy: always
    published_ports:
      - "389:389"
      - "636:636"
    volumes:
      # Data volumes
      - "ldap:/var/lib/ldap"
      - "slapd.d:/etc/ldap/slapd.d"
      # Certificates
      - "{{ ldap_cert_file }}:/container/service/slapd/assets/certs/cert.pem:ro"
      - "{{ ldap_key_file }}:/container/service/slapd/assets/certs/key.pem:ro"
      - "{{ ldap_ca_file }}:/container/service/slapd/assets/certs/ca.pem:ro"
    env:
      LDAP_ORGANISATION: "{{ ldap_organisation }}"
      LDAP_DOMAIN: "{{ local_domain_name }}"
      LDAP_ADMIN_PASSWORD: "{{ ldap_admin_password }}"
      LDAP_TLS_CRT_FILENAME: cert.pem
      LDAP_TLS_KEY_FILENAME: key.pem
      LDAP_TLS_CA_CRT_FILENAME: ca.pem
      LDAP_TLS_VERIFY_CLIENT: allow

- name: "Start phpldapadmin container"
  docker_container:
    name: phpldapadmin
    image: "{{ phpldapadmin_image }}:{{ phpldapadmin_version }}"
    restart_policy: always
    published_ports:
      - "18080:80"
    links:
      - "openldap:ldap"
    env:
      PHPLDAPADMIN_LDAP_HOSTS: "ldap"
      PHPLDAPADMIN_HTTPS: "false"
      PHPLDAPADMIN_TRUST_PROXY_SSL: "true"

- name: "Start self-service password reset"
  docker_container:
    name: ldap-ssp
    image: tiredofit/self-service-password
    restart_policy: always
    published_ports:
      - "28080:80"
    links:
      - "openldap:ldap"
    env:
      SECRETEKEY: "all your base are belong to us"
      LDAP_SERVER: "ldap://{{ ldap_server }}:{{ ldap_server_port }}"
      LDAP_BINDDN: "{{ ldap_admin_user }}"
      LDAP_BINDPASS: "{{ ldap_admin_password }}"
      LDAP_BASE_SEARCH: "{{ ldap_dc }}"
      PASSWORD_MIN_LENGTH: 8
      MAIL_FROM: "ldap@{{ local_domain_name }}"
      MAIL_FROM_NAME: "LDAP:{{ local_domain_name }}"
      NOTIFY_ON_CHANGE: true
      SMTP_HOST: "{{ smtp_hostname }}"
      SMTP_PORT: "{{ smtp_port }}"
      SMTP_AUTH_ON: "true"
      SMTP_USER: "{{ smtp_username }}"
      SMTP_PASS: "{{ smtp_password }}"

- name: "Create the different organizational units"
  ldap_entry:
    server_uri: "ldap://{{ ldap_server }}:{{ ldap_server_port }}/"
    bind_dn: "{{ ldap_admin_user }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "ou={{ item }},{{ ldap_dc }}"
    objectClass: organizationalUnit
  with_items:
    - groups
    - users

- name: "Create the different groups"
  ldap_entry:
    server_uri: "ldap://{{ ldap_server }}:{{ ldap_server_port }}/"
    bind_dn: "{{ ldap_admin_user }}"
    bind_pw: "{{ ldap_admin_password }}"
    dn: "cn={{ item.name }},ou=groups,{{ ldap_dc }}"
    objectClass: posixGroup
    attributes:
      gidNumber: "{{ item.gidNumber }}"
  with_items:
    - name: admins
      gidNumber: 10000
    - name: editors
      gidNumber: 10001
    - name: users
      gidNumber: 10002

