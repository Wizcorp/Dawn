version: "3"
networks:
  net:
    driver: overlay
  prometheus:
    external:
      name: prometheus_net
  traefik:
    external:
      name: traefik_net
volumes:
  grafana:
services:
  es_metrics:
    image: govale/es-monitor:latest
    environment:
      ES_METRICS_CLUSTER_URL: "http://{{ group_ipv4.control[0] }}:9200"
      ES_METRICS_INTERVAL: 30
      ES_METRICS_INDEX_NAME: elasticsearch_metrics
      ES_METRICS_MONITORING_CLUSTER_URL: "http://{{ group_ipv4.control[0] }}:9200"
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints: {{ grafana_stack_constraints|to_yaml }}

  app:
    image: {{ grafana_image }}:{{ grafana_version }}
    networks:
      - net
      - prometheus
      - traefik
    environment:
      GF_SECURITY_ADMIN_USER: {{ grafana_user | to_json }}
      GF_SECURITY_ADMIN_PASSWORD: {{ grafana_password | replace("$", "$$") | to_json }}
    volumes:
      # Configuration
      - "/etc/grafana.ini:/etc/grafana/grafana.ini"
      - "/etc/grafana-ldap.toml:/etc/grafana/ldap.toml"
      - "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem:/etc/ssl/certs/ca-certificates.crt:ro"
      # Data Volumes
      - "grafana:/var/lib/grafana"
    deploy:
      mode: global
      restart_policy:
        condition: on-failure
      placement:
        constraints: {{ grafana_stack_constraints|to_yaml }}
      labels:
        traefik.port: 3000
        traefik.frontend.rule: "Host:grafana.{{ local_domain_name }}"
        traefik.frontend.whitelist.sourceRange: "{{ grafana_whitelist }}"
        traefik.backend.loadbalancer.stickiness: "true"
        traefik.docker.network: traefik_net
