# Make sure vault is not already setup!
- name: "Check vault status"
  hashivault_status:
  ignore_errors: yes
  register: vault_status

- name: "Cancel bootstrap"
  when: >
    vault_force_bootstrap|default(false)|bool == False
    and vault_status.failed|default(false)|bool == False
    and "server is not yet initialized" not in vault_status.msg|default("")
  fail:
    msg: "The system was already bootstrapped, aborting!"

# Setup consul
- name: "Setup consul in local mode"
  import_role:
    name: AerisCloud.consul

# Setup vault
- name: "Setup vault in local mode"
  import_role:
    name: AerisCloud.vault

- import_tasks: vault_init.yml vault_status="{{ vault_status }}"
- import_tasks: root_ca.yml

# finally generate an app role for ansible
- name: "Create Ansible Approle"
  include_role:
    name: vault-approle
  vars:
    approle_name: "ansible"
    approle_policy: "{{ lookup('file', playbook_dir + '/../files/vault/policies/ansible.hcl') }}"
    approle_token_ttl: "{{ vault_ansible_token_ttl }}"
    approle_token_max_ttl: "{{ vault_ansible_token_max_ttl }}"
    approle_secret_id_ttl: "{{ vault_ansible_secret_id_ttl }}"
    approle_secret_id_num_uses: "{{ vault_ansible_secret_id_num_uses }}"
    approle_local_config_dest: "{{ vault_local_ansible_config }}"

- name: "Save bootstrap status"
  copy:
    content: "success"
    dest: "/opt/dawn/bootstrap-status"
  register: bootstrap_success
