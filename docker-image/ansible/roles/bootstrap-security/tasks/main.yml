# Make sure vault is not already setup!
- name: "Check vault status"
  hashivault_status:
  ignore_errors: yes
  register: vault_status

- name: "Cancel bootstrap"
  when: >
    vault_force_bootstrap|default(false)|bool == False
    and vault_status.failed|default(false)|bool == False
    and "server is not yet initialized" not in vault_status.msg|default("")
  fail:
    msg: "The system was already bootstrapped, aborting!"

# Setup consul
- name: "Setup consul in local mode"
  include_role:
    name: AerisCloud.consul

# Setup vault
- name: "Setup vault in local mode"
  include_role:
    name: AerisCloud.vault

- include: vault_init.yml vault_status="{{ vault_status }}"
- include: root_ca.yml

# generate the CAs we know we will need for the primary infra
#- include: intermediate_ca.yml backend_name=vault  server_ttl="{{ vault_server_max_ttl }}" client_ttl="{{ vault_client_max_ttl }}"
#- include: intermediate_ca.yml backend_name=consul server_ttl="{{ vault_consul_server_max_ttl }}" client_ttl="{{ vault_consul_client_max_ttl }}"
#- include: intermediate_ca.yml backend_name=docker server_ttl="{{ vault_docker_server_max_ttl }}" client_ttl="{{ vault_docker_client_max_ttl }}"

# finally generate an app role for ansible
- include: approle.yml

- name: "Save bootstrap status"
  copy:
    content: "success"
    dest: "/opt/dawn/bootstrap-status"
  register: bootstrap_success
