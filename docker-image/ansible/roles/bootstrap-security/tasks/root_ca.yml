# Create the root PKI backend
- name: "Check PKI backend status"
  hashivault_secret_list:
    token: "{{ vault_vars.root_token }}"
  register: vault_mount_list
  changed_when: false

- name: "Enable the Root PKI backend"
  when: vault_mount_list.backends['pki/'] is not defined
  hashivault_secret_enable:
    token: "{{ vault_vars.root_token }}"
    name: pki
    backend: pki

# We need to do the tuning manually since the lib doesn't provide the method for it
- name: "Tune root CA TTL"
  uri:
    headers:
      X-Vault-Token: "{{ vault_vars.root_token }}"
    url: "{{ vault_addr }}/v1/sys/mounts/pki/tune"
    method: POST
    body_format: json
    body: "{\"max_lease_ttl\":\"{{ vault_root_ca_ttl }}\"}"
    status_code: 204

# Generate our root CA, valid for 10 years
- name: "Check for root CA"
  hashivault_read:
    token: "{{ vault_vars.root_token }}"
    secret: /pki/config/urls
    key: issuing_certificates
  ignore_errors: true
  changed_when: false
  register: vault_root_cert_status

- name: "Create root CA"
  when: >
    cert_rotate_cas|default(false)|bool
    or vault_root_cert_status and vault_root_cert_status.failed|default(false)|bool
  hashivault_write:
    token: "{{ vault_vars.root_token }}"
    secret: /pki/root/generate/internal
    data:
      common_name: "{{ local_domain_name }}"
      ttl: "{{ vault_root_ca_ttl }}"

- name: "Set CA urls"
  when: >
    cert_rotate_cas|default(false)|bool
    or vault_root_cert_status and vault_root_cert_status.failed|default(false)|bool
  hashivault_write:
    token: "{{ vault_vars.root_token }}"
    secret: /pki/config/urls
    data:
      issuing_certificates: "http://vault.{{ local_domain_name }}/v1/pki/ca"
      crl_distribution_points: "http://vault.{{ local_domain_name }}/v1/pki/crl"
