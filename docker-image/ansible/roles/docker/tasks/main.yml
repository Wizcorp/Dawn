- name: "Check TLS certificates status"
  stat:
    path: "{{ docker_cert_file }}"
  register: docker_certs_stat

- name: "Create the docker group"
  group:
    name: docker
    system: yes

- name: "Create the docker user"
  user:
    name: docker
    group: docker
    createhome: no
    system: yes

- name: "Generate server TLS certificates"
  when: >
    docker_certs_stat.stat.exists|bool == False
    or cert_rotate_docker_server|default(false)|bool
    or cert_rotate_docker|default(false)|bool
    or cert_rotate_server|default(false)|bool
    or cert_rotate_all|default(false)|bool
  include_role:
    name: generate-tls
  vars:
    pki:
      # docker backend
      backend: docker
      role: server
      group: docker
      # targets
      files:
        cert: "{{ docker_cert_file }}"
        key: "{{ docker_key_file }}"
        ca: "{{ docker_ca_file }}"
      # TLS request data
      request_data:
        common_name: "{{ inventory_hostname }}.node.{{ local_domain_full }}"
        alt_names: "docker.service.{{ local_domain_full }},swarm.service.{{ local_domain_full }},*.swarm.service.{{ local_domain_full }}"
        ip_sans: "{{ public_ipv4 }},{{ ansible_all_ipv4_addresses|join(',') }}"
        ttl: "{{ docker_server_cert_ttl }}"
      notify:
        - Restart docker

- name: "Generate client TLS certificates"
  when: >
    docker_certs_stat.stat.exists|bool == False
    or cert_rotate_docker_client|default(false)|bool
    or cert_rotate_docker|default(false)|bool
    or cert_rotate_all|default(false)|bool
  include_role:
    name: generate-tls
  vars:
    pki:
      # vault backend
      backend: docker
      role: client
      group: docker
      # targets
      files:
        cert: "{{ docker_client_cert_file }}"
        key: "{{ docker_client_key_file }}"
        ca: "{{ docker_client_ca_file }}"
      # TLS request data
      request_data:
        common_name: "client.docker.{{ local_domain_name }}"
        ttl: "{{ docker_client_cert_ttl }}"

- name: "Install and configure docker"
  include_role:
    name: AerisCloud.docker
  vars:
    docker_ip: "{{ dawn_docker_ip|default(private_ipv4) }}"
    docker_dns: [ "{{ private_ipv4 }}" ]
    docker_hosts:
      - unix:///var/run/docker.sock
      - "{{ dawn_docker_ip|default(private_ipv4) }}:2376"
    docker_log_driver: "journald"
    docker_insecure_registries: "{{  group_ipv4.control | map('regex_replace', '$', ':5000') | list }}"
    docker_tls:
      enabled: true
      verify: true
      cacert: "{{ docker_ca_file }}"
      cert: "{{ docker_cert_file }}"
      key: "{{ docker_key_file }}"

- name: "Make sure to flush all handlers right now"
  meta: flush_handlers
