#########
# SETUP #
#########

### Force fact gathering
# We iterate on every machines in the "all" group and make sure we at least get
# the IPv4 of each system, this allows us to run --limit plays while still
# providing templates with up-to-date informations about other nodes in the inv.
###
- hosts: all:!windows
  gather_facts: true
  become: true
  tasks:
    - fail:
        msg: "--limit is not supported on those playbooks due to ansible limitations"
      when: ansible_play_batch|length != groups['all']|length

    # We need to use the private_interface of the target otherwise we'll run into
    # issues with multi-os clusters
    - name: "Save the private IPv4 as fact"
      set_fact:
        private_ipv4: "{{ hostvars[inventory_hostname]['ansible_' + private_interface]['ipv4']['address'] }}"
      tags:
        - always

    # Here we cache some unreadable blobs of filters into custom facts to make the
    # rest of this playbook easier to read
    - name: "Set IP facts"
      set_fact:
        group_ipv4:
          consul: "{{ groups['consul'] | map('extract', hostvars, ['private_ipv4']) | list }}"
          control: "{{ groups['control'] | map('extract', hostvars, ['private_ipv4']) | list }}"
          monitor: "{{ groups['monitor'] | map('extract', hostvars, ['private_ipv4']) | list }}"
          edge: "{{ groups['edge'] | map('extract', hostvars, ['private_ipv4']) | list }}"
          worker: "{{ groups['worker'] | map('extract', hostvars, ['private_ipv4']) | list }}"
      tags:
        - always

    # We don't want all the pip installs and various dependencies to conflict with
    # normal yum packages, this solves the issue by creating an ansible virtualenv
    # and tells ansible to use it
    - name: "Create deployment folder"
      file: path=/opt/dawn state=directory mode=0755
      tags: [ 'always' ]
    - name: "Make sure virtualenv and additional dependencies are available"
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - python-virtualenv
        - openssl-devel
        - openldap-devel
      tags: [ 'always' ]

    - name: "Install docker python library"
      pip:
        name: "{{ item }}"
        state: latest
        virtualenv: /opt/dawn/deploy
        virtualenv_site_packages: yes
      with_items:
        - pip
        - python-consul
        - python-ldap
        - pyOpenSSL
        - docker-py
        - hvac
      tags: [ 'always' ]
    - name: "Tell subsequent tasks to use this virtualenv"
      set_fact:
        ansible_virtualenv: /opt/dawn/deploy
        ansible_python_interpreter: /opt/dawn/deploy/bin/python
      tags: [ 'always' ]
